#content.section--primary
  .container
    %h1= title(@person.display_name)

    - if @most_recent_incumbency.nil? || @most_recent_incumbency.house.name == 'House of Lords'
      %p= @person.full_title
      %p= "#{@person.full_name}" unless @person.display_name == @person.full_name

    - unless @person.statuses[:house_membership_status].empty?
      .block--border
        - if @person.statuses[:house_membership_status].include?('Current MP')
          %p
            = t('.mp_for')
            = link_to(@current_incumbency.constituency.name, constituency_path(@current_incumbency.constituency.graph_id))
          - if !@person.statuses[:house_membership_status].empty? && @person.statuses[:house_membership_status].include?('Former Lord')
            %p
              = link_to("#{t('all').capitalize} #{t('current')} #{t('mp_plural')}", house_members_current_a_z_letter_path(HousesHelper.commons_id, 'a'))
              = " / "
              = link_to("#{t('all').capitalize} #{t('lord_plural')}", house_members_a_z_letter_path(HousesHelper.lords_id, 'a'))
          -else
            %p= link_to("#{t('all').capitalize} #{t('current')} #{t('mp_plural')}", house_members_current_a_z_letter_path(HousesHelper.commons_id, 'a'))
        - else
          %p
            - if @person.statuses[:house_membership_status].include?('Lord')
              - if @person.statuses[:house_membership_status].include?('Former MP')
                = @person.statuses[:house_membership_status].join(' and ')
                %p
                  = link_to("#{t('all').capitalize} #{t('current')} #{t('lord_plural')}", house_members_current_a_z_letter_path(HousesHelper.lords_id, 'a'))
                  = " / "
                  = link_to("#{t('all').capitalize} #{t('mp_plural')}", house_members_a_z_letter_path(HousesHelper.commons_id, 'a'))
              - else
                = @person.statuses[:house_membership_status].join(' and ')
                %p= link_to("#{t('all').capitalize} #{t('current')} #{t('lord_plural')}", house_members_current_a_z_letter_path(HousesHelper.lords_id, 'a'))
            - else
              - if @person.statuses[:house_membership_status].include?('Former MP')
                - if @person.statuses[:house_membership_status].include?('Former Lord')
                  = @person.statuses[:house_membership_status].join(' and ')
                  %p
                    = link_to("#{t('all').capitalize} #{t('current_and_former')} #{t('lord_plural')}", house_members_a_z_letter_path(HousesHelper.lords_id, 'a'))
                    = " / "
                    = link_to("#{t('all').capitalize} #{t('current_and_former')} #{t('mp_plural')}", house_members_a_z_letter_path(HousesHelper.commons_id, 'a'))
                - else
                  = @person.statuses[:house_membership_status].join(' and ')
                  %p
                    = link_to("#{t('all').capitalize} #{t('current_and_former')} #{t('mp_plural')}", house_members_a_z_letter_path(HousesHelper.commons_id, 'a'))
              - else
                = @person.statuses[:house_membership_status].join(' and ')
                %p
                  = link_to("#{t('all').capitalize} #{t('current_and_former')} #{t('lord_plural')}", house_members_a_z_letter_path(HousesHelper.lords_id, 'a'))
      - if @current_party_membership && @current_incumbency
        .block--border
          %p= link_to(@current_party_membership.party.name, party_path(@current_party_membership.party.graph_id))

%section
  .container
    - if @current_incumbency && @current_party_membership
      %h2= "#{t('.contact').capitalize}"
      - if @person.statuses[:house_membership_status].include?('Current MP') || @person.statuses[:house_membership_status].include?('Member of the House of Lords')
        - if @postcode
          - if @postcode_constituency.correct?
            %p= t('.correct_mp', name: @person.display_name)
          - else
            %p
              = t('.incorrect_mp', name: @person.display_name)
              = "#{link_to(@postcode_constituency.members.first.display_name, person_path(@postcode_constituency.members.first.graph_id))}.".html_safe
        - else
          %h3= t('.check_mp', name: @person.display_name)

          = render partial: 'postcodes/postcode_lookup', locals: { path: person_path(@person.graph_id) }

        - if @current_incumbency.contact_points.empty?
          %p= t('.empty_contact_details')
        - else
          %dl.list--definition
            - @current_incumbency.contact_points.each do |contact_point|
              - if contact_point.email.present?
                %dt= t('contact_points.email').capitalize + ": "
                %dd
                  %a{ :href => "mailto:#{contact_point.email}" }= contact_point.email
              - if contact_point.phone_number.present?
                %dt= t('contact_points.phone').capitalize + ": "
                %dd
                  %a{ :href => "tel:#{contact_point.phone_number.gsub(/\s+/, "")}"}= contact_point.phone_number
              - if contact_point.postal_addresses.present?
                %dt
                  = t('contact_points.address').capitalize + ": "
                - contact_point.postal_addresses.each do |postal_address|
                  %dd= postal_address.full_address
              - if @current_incumbency.contact_points.length > 1
                - unless contact_point.equal?(@current_incumbency.contact_points.last)
                  .line-break--sm

%section
  .container
    - if @house_incumbencies.present? || @seat_incumbencies.present?
      %h2= t('.biography').capitalize
      - if @house_incumbencies.present?
        %h3= "#{t('member').capitalize} #{t('of_the')} #{t('house_of_lords')}"
        %ol.list--pipe
          - @house_incumbencies.sort{ |inc_a, inc_b| inc_b.start_date <=> inc_a.start_date }.each do |house_incumbency|
            %li
              %p
                = "#{l(house_incumbency.start_date, format: :default)}" unless house_incumbency.start_date.nil?
                = house_incumbency.current? ? t( 'to_present') : " #{t('to')} #{l(house_incumbency.end_date, format: :default)}"
      - if @seat_incumbencies.present?
        %h3= "#{t('member').capitalize} #{t('of_the')} #{t('house_of_commons')}"
        %ol.list--pipe
          - @seat_incumbencies.sort{ |inc_a, inc_b| inc_b.start_date <=> inc_a.start_date }.each do |seat_incumbency|
            %li
              %p
                = t('.mp_for')
                = link_to(seat_incumbency.constituency.name, constituency_path(seat_incumbency.constituency.graph_id))
              %p
                = "#{l(seat_incumbency.start_date, format: :default)}" unless seat_incumbency.start_date.nil?
                = seat_incumbency.current? ? t( 'to_present') : " #{t('to')} #{l(seat_incumbency.end_date, format: :default)}"
